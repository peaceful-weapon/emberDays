minispade.register('ember-data/initializers', "(function() {minispade.require(\"ember-data/serializers/json_serializer\");\nminispade.require(\"ember-data/system/debug/debug_adapter\");\nminispade.require(\"ember-data/transforms/index\");\n\n/**\n  @module ember-data\n*/\n\nvar set = Ember.set;\n\n/*\n  This code registers an injection for Ember.Application.\n\n  If an Ember.js developer defines a subclass of DS.Store on their application,\n  this code will automatically instantiate it and make it available on the\n  router.\n\n  Additionally, after an application's controllers have been injected, they will\n  each have the store made available to them.\n\n  For example, imagine an Ember.js application with the following classes:\n\n  App.Store = DS.Store.extend({\n    adapter: 'custom'\n  });\n\n  App.PostsController = Ember.ArrayController.extend({\n    // ...\n  });\n\n  When the application is initialized, `App.Store` will automatically be\n  instantiated, and the instance of `App.PostsController` will have its `store`\n  property set to that instance.\n\n  Note that this code will only be run if the `ember-application` package is\n  loaded. If Ember Data is being used in an environment other than a\n  typical application (e.g., node.js where only `ember-runtime` is available),\n  this code will be ignored.\n*/\n\nEmber.onLoad('Ember.Application', function(Application) {\n  Application.initializer({\n    name: \"store\",\n\n    initialize: function(container, application) {\n      application.register('store:main', application.Store || DS.Store);\n      application.register('serializer:_default', DS.JSONSerializer);\n      application.register('serializer:_rest', DS.RESTSerializer);\n      application.register('adapter:_rest', DS.RESTAdapter);\n\n      // Eagerly generate the store so defaultStore is populated.\n      // TODO: Do this in a finisher hook\n      container.lookup('store:main');\n    }\n  });\n\n  Application.initializer({\n    name: \"transforms\",\n\n    initialize: function(container, application) {\n      application.register('transform:boolean', DS.BooleanTransform);\n      application.register('transform:date', DS.DateTransform);\n      application.register('transform:number', DS.NumberTransform);\n      application.register('transform:string', DS.StringTransform);\n    }\n  });\n\n  Application.initializer({\n    name: \"dataAdapter\",\n\n    initialize: function(container, application) {\n      application.register('dataAdapter:main', DS.DebugAdapter);\n    }\n  });\n\n  Application.initializer({\n    name: \"injectStore\",\n\n    initialize: function(container, application) {\n      application.inject('controller', 'store', 'store:main');\n      application.inject('route', 'store', 'store:main');\n      application.inject('serializer', 'store', 'store:main');\n      application.inject('dataAdapter', 'store', 'store:main');\n    }\n  });\n\n});\n\n})();\n//@ sourceURL=ember-data/initializers");