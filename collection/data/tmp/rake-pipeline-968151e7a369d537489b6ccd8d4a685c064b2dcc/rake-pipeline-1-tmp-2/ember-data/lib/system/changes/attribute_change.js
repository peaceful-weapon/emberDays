minispade.register('ember-data/system/changes/attribute_change', "(function() {/**\n  @module ember-data\n*/\n\n/**\n  An AttributeChange object is created whenever a record's\n  attribute changes value. It is used to track changes to a\n  record between transaction commits.\n\n  @class AttributeChange\n  @namespace DS\n  @private\n  @constructor\n*/\nvar AttributeChange = DS.AttributeChange = function(options) {\n  this.record = options.record;\n  this.store = options.store;\n  this.name = options.name;\n  this.value = options.value;\n  this.oldValue = options.oldValue;\n};\n\nAttributeChange.createChange = function(options) {\n  return new AttributeChange(options);\n};\n\nAttributeChange.prototype = {\n  sync: function() {\n    if (this.value !== this.oldValue) {\n      this.record.send('becomeDirty');\n      this.record.updateRecordArraysLater();\n    }\n\n    // TODO: Use this object in the commit process\n    this.destroy();\n  },\n\n  /**\n    If the AttributeChange is destroyed (either by being rolled back\n    or being committed), remove it from the list of pending changes\n    on the record.\n\n    @method destroy\n  */\n  destroy: function() {\n    delete this.record._changesToSync[this.name];\n  }\n};\n\n})();\n//@ sourceURL=ember-data/system/changes/attribute_change");