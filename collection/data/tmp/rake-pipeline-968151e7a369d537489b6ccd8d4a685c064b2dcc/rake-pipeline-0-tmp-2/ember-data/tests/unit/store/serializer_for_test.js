minispade.register('ember-data/~tests/unit/store/serializer_for_test', "(function() {var container, store, app;\n\nmodule(\"unit/store/serializer_for - DS.Store#serializerFor\", {\n  setup: function() {\n    store = createStore({person: DS.Model.extend()});\n    container = store.container;\n  },\n\n  teardown: function() {\n    container.destroy();\n    store.destroy();\n  }\n});\n\ntest(\"Calling serializerFor looks up 'serializer:<type>' from the container\", function() {\n  var PersonSerializer = DS.JSONSerializer.extend();\n\n  container.register('serializer:person', PersonSerializer);\n\n  ok(store.serializerFor('person') instanceof PersonSerializer, \"serializer returned from serializerFor is an instance of the registered Serializer class\");\n});\n\ntest(\"Calling serializerFor with a type that has not been registered looks up the default ApplicationSerializer\", function() {\n  var ApplicationSerializer = DS.JSONSerializer.extend();\n\n  container.register('serializer:application', ApplicationSerializer);\n\n  ok(store.serializerFor('person') instanceof ApplicationSerializer, \"serializer returned from serializerFor is an instance of ApplicationSerializer\");\n});\n\ntest(\"Calling serializerFor with a type that has not been registered and in an application that does not have an ApplicationSerializer looks up the default Ember Data serializer\", function() {\n  ok(store.serializerFor('person') instanceof DS.JSONSerializer, \"serializer returned from serializerFor is an instance of DS.JSONSerializer\");\n});\n\n})();\n//@ sourceURL=ember-data/~tests/unit/store/serializer_for_test");