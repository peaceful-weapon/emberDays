minispade.register('ember-data/~tests/integration/application_test', "(function() {var app, container;\n\n/**\n  These tests ensure that Ember Data works with Ember.js' application\n  initialization and dependency injection APIs.\n*/\n\nmodule(\"integration/application - Injecting a Custom Store\", {\n  setup: function() {\n    Ember.run(function() {\n      app = Ember.Application.create({\n        Store: DS.Store.extend({ isCustom: true }),\n        FooController: Ember.Controller.extend(),\n        ApplicationView: Ember.View.extend(),\n        BazController: {},\n        ApplicationController: Ember.View.extend()\n      });\n    });\n\n    container = app.__container__;\n  },\n\n  teardown: function() {\n    app.destroy();\n    Ember.BOOTED = false;\n  }\n});\n\ntest(\"If a Store property exists on an Ember.Application, it should be instantiated.\", function() {\n  ok(container.lookup('store:main').get('isCustom'), \"the custom store was instantiated\");\n});\n\ntest(\"If a store is instantiated, it should be made available to each controller.\", function() {\n  var fooController = container.lookup('controller:foo');\n  ok(fooController.get('store.isCustom'), \"the custom store was injected\");\n});\n\nmodule(\"integration/application - Injecting the Default Store\", {\n  setup: function() {\n    Ember.run(function() {\n      app = Ember.Application.create({\n        FooController: Ember.Controller.extend(),\n        ApplicationView: Ember.View.extend(),\n        BazController: {},\n        ApplicationController: Ember.View.extend()\n      });\n    });\n\n    container = app.__container__;\n  },\n\n  teardown: function() {\n    app.destroy();\n    Ember.BOOTED = false;\n  }\n});\n\ntest(\"If a Store property exists on an Ember.Application, it should be instantiated.\", function() {\n  ok(container.lookup('store:main') instanceof DS.Store, \"the store was instantiated\");\n});\n\ntest(\"If a store is instantiated, it should be made available to each controller.\", function() {\n  var fooController = container.lookup('controller:foo');\n  ok(fooController.get('store') instanceof DS.Store, \"the store was injected\");\n});\n\ntest(\"the DS namespace should be accessible\", function() {\n  ok(Ember.Namespace.byName('DS') instanceof Ember.Namespace, \"the DS namespace is accessible\");\n});\n})();\n//@ sourceURL=ember-data/~tests/integration/application_test");