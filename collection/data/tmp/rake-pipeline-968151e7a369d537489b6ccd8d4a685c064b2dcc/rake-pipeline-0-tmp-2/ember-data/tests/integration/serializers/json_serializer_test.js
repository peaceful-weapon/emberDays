minispade.register('ember-data/~tests/integration/serializers/json_serializer_test', "(function() {var get = Ember.get, set = Ember.set;\nvar Post, post, Comment, comment, env;\n\nmodule(\"integration/serializer/json - JSONSerializer\", {\n  setup: function() {\n    Post = DS.Model.extend({\n      title: DS.attr('string')\n    });\n    Comment = DS.Model.extend({\n      body: DS.attr('string'),\n      post: DS.belongsTo('post')\n    });\n    env = setupStore({\n      post:     Post,\n      comment:  Comment\n    });\n    env.store.modelFor('post');\n    env.store.modelFor('comment');\n  },\n\n  teardown: function() {\n    env.store.destroy();\n  }\n});\n\ntest(\"serializeAttribute\", function() {\n  post = env.store.createRecord(\"post\", { title: \"Rails is omakase\"});\n  var json = {};\n\n  env.serializer.serializeAttribute(post, json, \"title\", {type: \"string\"});\n\n  deepEqual(json, {\n    title: \"Rails is omakase\"\n  });\n});\n\ntest(\"serializeAttribute respects keyForAttribute\", function() {\n  env.container.register('serializer:post', DS.JSONSerializer.extend({\n    keyForAttribute: function(key) {\n      return key.toUpperCase();\n    }\n  }));\n\n  post = env.store.createRecord(\"post\", { title: \"Rails is omakase\"});\n  var json = {};\n\n  env.container.lookup(\"serializer:post\").serializeAttribute(post, json, \"title\", {type: \"string\"});\n\n\n  deepEqual(json, {\n    TITLE: \"Rails is omakase\"\n  });\n});\n\ntest(\"serializeBelongsTo\", function() {\n  post = env.store.createRecord(Post, { title: \"Rails is omakase\", id: \"1\"});\n  comment = env.store.createRecord(Comment, { body: \"Omakase is delicious\", post: post});\n  var json = {};\n\n  env.serializer.serializeBelongsTo(comment, json, {key: \"post\", options: {}});\n\n  deepEqual(json, {\n    post: \"1\"\n  });\n\n  json = {};\n\n  set(comment, 'post', null);\n\n  env.serializer.serializeBelongsTo(comment, json, {key: \"post\", options: {}});\n\n  deepEqual(json, {\n    post: null\n  }, \"Can set a belongsTo to a null value\");\n\n});\n\ntest(\"serializeBelongsTo respects keyForRelationship\", function() {\n  env.container.register('serializer:post', DS.JSONSerializer.extend({\n    keyForRelationship: function(key, type) {\n      return key.toUpperCase();\n    }\n  }));\n  post = env.store.createRecord(Post, { title: \"Rails is omakase\", id: \"1\"});\n  comment = env.store.createRecord(Comment, { body: \"Omakase is delicious\", post: post});\n  var json = {};\n\n  env.container.lookup(\"serializer:post\").serializeBelongsTo(comment, json, {key: \"post\", options: {}});\n\n  deepEqual(json, {\n    POST: \"1\"\n  });\n});\n\ntest(\"serializePolymorphicType\", function() {\n  env.container.register('serializer:comment', DS.JSONSerializer.extend({\n    serializePolymorphicType: function(record, json, relationship) {\n      var key = relationship.key,\n          belongsTo = get(record, key);\n      json[relationship.key + \"TYPE\"] = belongsTo.constructor.typeKey;\n    }\n  }));\n\n  post = env.store.createRecord(Post, { title: \"Rails is omakase\", id: \"1\"});\n  comment = env.store.createRecord(Comment, { body: \"Omakase is delicious\", post: post});\n  var json = {};\n\n  env.container.lookup(\"serializer:comment\").serializeBelongsTo(comment, json, {key: \"post\", options: { polymorphic: true}});\n\n  deepEqual(json, {\n    post: \"1\",\n    postTYPE: \"post\"\n  });\n});\n\n})();\n//@ sourceURL=ember-data/~tests/integration/serializers/json_serializer_test");